<?xml version="1.0" encoding="ISO-8859-1"?><refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:lang="en" xml:id="wden"><info><pubdate>July 2010  </pubdate></info><refnamediv><refname>wden</refname><refpurpose>  Automatic 1-D de-noising </refpurpose></refnamediv>
  

   <refsynopsisdiv><title>Calling Sequence</title><synopsis>[XD,CXD,LXD] = wden(X,TPTR,SORH,SCAL,N,wname)
[XD,CXD,LXD] = wden(C,L,TPTR,SORH,SCAL,N,wname)
</synopsis></refsynopsisdiv>
  
   <refsection><title>Parameters</title>
 
      <variablelist>
  
      <varlistentry>
  
            <term>X  </term>
  
            <listitem>
    : input vector
  </listitem> 
  
         </varlistentry>
         
         <varlistentry>
  
            <term>C  </term>
  
            <listitem>
    : coefficent array
  </listitem> 
  
         </varlistentry>
  
         <varlistentry>
  
            <term>L  </term>
  
            <listitem>
    : length array
  </listitem> 
  
         </varlistentry>
         
  
         <varlistentry>
  
            <term>wname  </term>
  
            <listitem>
    : wavelet name
  </listitem> 
  
         </varlistentry>
  
         <varlistentry>
  
            <term>N  </term>
  
            <listitem>
    : decompostion level
  </listitem> 
  
         </varlistentry>
  
         <varlistentry>
  
            <term>SCAL  </term>
  
            <listitem>
               <para>
    : threshold rescaling
       </para>        <para>
    : 'one' for no rescaling
          </para>        <para>
    : 'sln' for rescaling using a single estimation of level noise based on first-level coefficients
           </para>        <para>
    : 'mln' for rescaling done using level-dependent estimation of level noise
     </para>  
  </listitem> 
  
         </varlistentry>
  
         <varlistentry>
  
            <term>SORH  </term>
  
            <listitem>
    : ('s' or 'h') soft or hard thresholding
  </listitem> 
  
         </varlistentry>
  
         <varlistentry>
  
            <term>TPTR  </term>
  
            <listitem>
              <para>
    : threshold selection rule
         </para>        <para>
     :'rigrsure' uses the principle of Stein's Unbiased Risk.
           </para>        <para>
 : 'heursure' is an heuristic variant of the first option.
        </para>        <para>
 : 'sqtwolog' for universal threshold
        </para>        <para>
 : 'minimaxi' for minimax thresholding 
     </para>  
  </listitem> 
  
         </varlistentry>
         
       
                  <varlistentry>
  
            <term>CXD  </term>
  
            <listitem>
    : de-noised coefficent array
  </listitem> 
  
         </varlistentry>
  
         <varlistentry>
  
            <term>LXD  </term>
  
            <listitem>
    : de-noised  length array
  </listitem> 
  
         </varlistentry>
         
                  <varlistentry>
  
            <term>XD  </term>
  
            <listitem>
    : de-noised signal
  </listitem> 
  
         </varlistentry>
 
      </variablelist>
  
   </refsection>
  
   <refsection><title>Description</title>
  
      <para>
      wden performs an automatic de-noising process of a one-dimensional signal using wavelets.
  
  </para>
  
   </refsection>
  
   <refsection><title>Examples</title><programlisting role="example"><![CDATA[
   snr = 3; init = 2055615866; 
[xref,x] = wnoise(3,11,snr,init);
lev = 5;
xd = wden(x,'heursure','s','one',lev,'sym8');
 ]]></programlisting></refsection>
  
   <refsection><title>Authors</title><para>Holger Nahrstaedt</para></refsection>
  
   <refsection><title>See Also</title><simplelist type="inline">
    
      <member> 
         <link linkend="thselect">thselect</link>  
          <link linkend="wtresh">wtresh</link>  
           <link linkend="wavedec">wavedec</link>  
      </member>
  
   </simplelist></refsection>

</refentry>